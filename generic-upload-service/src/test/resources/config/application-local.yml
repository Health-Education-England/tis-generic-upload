# ===================================================================
# Spring Boot configuration.
#
# This configuration is used for unit/integration tests.
# ===================================================================

# ===================================================================
# Standard Spring Boot properties.
# Full reference is available at:
# http://docs.spring.io/spring-boot/docs/current/reference/html/common-application-properties.html
# ===================================================================


spring:
    application:
        name: generic-upload
    profiles:
        active: dev
    jackson:
        serialization.write_dates_as_timestamps: false
    cache:
        type: none
    datasource:
        type: com.zaxxer.hikari.HikariDataSource
        url: jdbc:h2:mem:genericupload;DB_CLOSE_DELAY=-1;IGNORECASE=TRUE;MODE=MySQL
        name:
        username: sa
        password:
    jpa:
        database-platform: org.hibernate.dialect.H2Dialect
        database: H2
        open-in-view: false
        show-sql: true
        hibernate:
            ddl-auto: none
            naming:
                physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
                implicit-strategy: org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyJpaImpl

        properties:
            hibernate.id.new_generator_mappings: true
            hibernate.cache.use_second_level_cache: false
            hibernate.cache.use_query_cache: false
            hibernate.generate_statistics: true
            hibernate.hbm2ddl.auto: create-drop
    messages:
        basename: i18n/messages
    mvc:
        favicon:
            enabled: false

flyway:
    baseline-description: #
    baseline-version: 1 # version to start migration
    baseline-on-migrate: true
    check-location: false # Check that migration scripts location exists.
    clean-on-validation-error: false
    flyway.enabled: true # Enable flyway.
    encoding: #
    ignore-failed-future-migration: #
    init-sqls: # SQL statements to execute to initialize a connection immediately after obtaining it.
    locations: classpath:db/migration
    out-of-order: true
    password:
    placeholder-prefix:
    placeholder-replacement:
    placeholder-suffix:
    placeholders.*:
    schemas: ${DBNAME:genericupload}
    sql-migration-prefix: V
    sql-migration-separator:
    sql-migration-suffix: .sql
    table:  #
    url: ${spring.datasource.url}
    user: sa
    validate-on-migrate:  #
    initOnMigrate: true

security:
    basic:
        enabled: false

server:
    port: 10344
    address: localhost

# ===================================================================
# Azure block blob storage properties
# ===================================================================
azure:
  accountName: ${CLOUD_BLOB_ACCOUNT_NAME:}
  accountKey: ${CLOUD_BLOB_ACCOUNT_KEY:}
  containerName: ${CLOUD_BLOB_CONTAINER_NAME:dev}
  servicebus:
    connection-string: ${SERVICE_BUS_CONNECTION_STRING:Endpoint=sb://heetisdevsb.servicebus.windows.net/;SharedAccessKeyName=RootManageSharedAccessKey;SharedAccessKey=USyHBoGzI0Q+dS0rchjGYFurWlJBe5C7omLSxo6KYeY=}
    queue-name: ${SERVICE_BUS_QUEUE_NAME:heetisdevq}
    queue-receive-mode: ${SERVICE_BUS_Q_RECEIVE_MODE:peeklock}
    topic-name: ${SERVICE_BUS_TOPIC_NAME:heetisdevt}
    subscription-name: ${SERVICE_BUS_SUBSCRIPTION_NAME:heetisdevs}
    subscription-receive-mode: ${SERVICE_BUS_S_RECEIVE_MODE:peeklock}

deadletterDirectory: ${DEADLETER_DIR:/tmp/deadletter}

application:
