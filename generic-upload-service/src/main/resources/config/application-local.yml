spring:
  datasource:
    url: jdbc:mysql://${DBHOST:localhost}:${DBPORT:3306}/${DBNAME:genericupload}?useUnicode=true&characterEncoding=utf8&useSSL=${USE_SSL:false}
    username: ${DBUSER:root}
    password: ${DBPASSWORD:}
  jpa:
    show-sql: false

flyway:
  password: ${DBPASSWORD:}
  schemas: ${DBNAME:genericupload}

kc:
  realm: ${KC_REALM}
  master.realm: ${KC_MASTER_REALM}
  client.id: ${KC_CLIENT_ID}
  server.url: ${KC_SERVER_URL}
  username: ${KC_USERNAME}
  password: ${KC_PASSWORD}
  timeout: ${KC_TIMEOUT}

logging:
  file: ${LOG_DIR:${HOME}}/generic-upload.log

# ===================================================================
# Azure block blob storage properties
# ===================================================================
azure:
  accountName: ${CLOUD_BLOB_ACCOUNT_NAME:}
  accountKey: ${CLOUD_BLOB_ACCOUNT_KEY:}
  containerName: ${CLOUD_BLOB_CONTAINER_NAME:fileupload}
  servicebus:
    connection-string: ${SERVICE_BUS_CONNECTION_STRING:Endpoint=sb://heetisdevsb.servicebus.windows.net/;SharedAccessKeyName=RootManageSharedAccessKey;SharedAccessKey=USyHBoGzI0Q+dS0rchjGYFurWlJBe5C7omLSxo6KYeY=}
    queue-name: ${SERVICE_BUS_QUEUE_NAME:heetisdevq}
    queue-receive-mode: ${SERVICE_BUS_Q_RECEIVE_MODE:peeklock}
    topic-name: ${SERVICE_BUS_TOPIC_NAME:heetisdevt}
    subscription-name: ${SERVICE_BUS_SUBSCRIPTION_NAME:heetisdevs}
    subscription-receive-mode: ${SERVICE_BUS_S_RECEIVE_MODE:peeklock}

deadletterDirectory: ${DEADLETER_DIR:/tmp/deadletter}

application:

aws.s3.bucket: generic-upload-tis-team-local
